{"ast":null,"code":"var _jsxFileName = \"/Users/abusufian/Desktop/spring-rain-assignment/phonebook-webapp/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nconst APIURL = \"http://localhost:4000\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fSubmit = e => {\n      e.preventDefault();\n      let datas = this.state.datas;\n\n      if (this.refs.name.value == '' || this.refs.name.value == null) {\n        this.state.nameErrors = 'Please provide name';\n      }\n\n      if (this.refs.mobile_number.value == '' || this.refs.mobile_number.value == null) {\n        this.state.phoneErrors = 'Please provide Mobile Number';\n      }\n\n      let name = this.refs.name.value;\n      let mobile_number = this.refs.mobile_number.value;\n      let serverSendData = {\n        name,\n        mobile_number\n      }; // edit function calling\n\n      if (this.state.id && (this.refs.mobile_number.value != '' || this.refs.name.value != '' || this.refs.name.value != null || this.refs.mobile_number.value != null)) {\n        this.editContactDetail(serverSendData);\n      } // create function calling\n      else if (this.refs.mobile_number.value != '' || this.refs.name.value != '' || this.refs.name.value != null || this.refs.mobile_number.value != null) {\n          this.createContact(serverSendData);\n        } else {\n          console.log('Error');\n        }\n\n      this.state.nameErrors = '';\n      this.state.phoneErrors = '';\n      this.fetchContactDetails(); // reset form data here\n\n      this.refs.myForm.reset(); // reinitializing focus to the name input field\n\n      this.refs.name.focus();\n    };\n\n    this.createContact = async serverSendData => {\n      const response = await fetch(`${APIURL}/create`, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(serverSendData)\n      });\n    };\n\n    this.fetchContactDetails = () => {\n      fetch(`${APIURL}/allcontacts`).then(res => res.json()).then(data => {\n        this.setState({\n          datas: data\n        });\n      }).catch(console.log);\n    };\n\n    this.editContactDetail = async serverSendData => {\n      const response = await fetch(`${APIURL}/editcontact/?contactId=${this.state.id}`, {\n        method: \"PUT\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(serverSendData)\n      });\n    };\n\n    this.deleteContactDetail = async id => {\n      const response = await fetch(`${APIURL}/deletecontact/?contactId=${id}`, {\n        method: \"DELETE\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify()\n      });\n    };\n\n    this.fRemove = (i, id) => {\n      let datas = this.state.datas;\n      datas.splice(i, 1);\n      this.setState({\n        datas: datas\n      });\n      this.deleteContactDetail(id);\n      this.refs.myForm.reset();\n      this.refs.name.focus();\n    };\n\n    this.fEdit = (i, id) => {\n      let data = this.state.datas[i];\n      this.refs.name.value = data.name;\n      this.refs.mobile_number.value = data.mobile_number;\n      this.setState({\n        act: 1,\n        index: i,\n        id: id\n      });\n      this.refs.name.focus();\n    };\n\n    this.searchQuery = e => {\n      let item = this.refs.query.value;\n      console.log(item);\n      fetch(`${APIURL}/searchcontact/?filterItem=${item}`).then(res => res.json()).then(data => {\n        this.setState({\n          datas: data\n        });\n      }).catch(console.log);\n    };\n\n    this.state = {\n      title: 'Add Contact',\n      act: 0,\n      index: '',\n      id: '',\n      datas: [],\n      nameErrors: '',\n      phoneErrors: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchContactDetails();\n    this.refs.name.focus();\n  }\n\n  render() {\n    let datas = this.state.datas;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"form\", {\n      ref: \"myForm\",\n      className: \"myForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"name\",\n      placeholder: \"name\",\n      className: \"formField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), this.state.nameErrors, React.createElement(\"input\", {\n      type: \"tel\",\n      ref: \"mobile_number\",\n      placeholder: \"mobile number\",\n      className: \"formField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), this.state.phoneErrors, React.createElement(\"button\", {\n      onClick: e => this.fSubmit(e),\n      className: \"myButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Contact List\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"query\",\n      placeholder: \"search contact\",\n      className: \"searchbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => this.searchQuery(e),\n      className: \"enterbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Enter\")), React.createElement(\"pre\", {\n      className: \"contactList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, datas.map((data, i) => React.createElement(\"li\", {\n      key: i,\n      className: \"myList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, data.id, \".\", data.name, \", \", data.mobile_number, React.createElement(\"button\", {\n      onClick: () => this.fRemove(i, data.id),\n      className: \"myListButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Remove\"), React.createElement(\"button\", {\n      onClick: () => this.fEdit(i, data.id),\n      className: \"myListButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Edit\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/abusufian/Desktop/spring-rain-assignment/phonebook-webapp/frontend/src/App.js"],"names":["React","Component","APIURL","App","constructor","props","fSubmit","e","preventDefault","datas","state","refs","name","value","nameErrors","mobile_number","phoneErrors","serverSendData","id","editContactDetail","createContact","console","log","fetchContactDetails","myForm","reset","focus","response","fetch","method","mode","cache","headers","body","JSON","stringify","then","res","json","data","setState","catch","deleteContactDetail","fRemove","i","splice","fEdit","act","index","searchQuery","item","query","title","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nconst APIURL = \"http://localhost:4000\";\nclass App extends Component {\n   constructor(props){\n    super(props);\n    this.state = {\n        title: 'Add Contact',\n        act: 0,\n        index: '',\n        id: '',\n        datas: [],\n        nameErrors: '',\n        phoneErrors: ''\n    }\n\n  }\n\n  componentDidMount(){\n    this.fetchContactDetails();\n    this.refs.name.focus();\n  }\n\n  fSubmit = (e) => {\n      e.preventDefault();\n      let datas = this.state.datas;\n      if(this.refs.name.value == '' || this.refs.name.value == null){\n          this.state.nameErrors = 'Please provide name';\n      }\n      if(this.refs.mobile_number.value == '' || this.refs.mobile_number.value == null){\n          this.state.phoneErrors = 'Please provide Mobile Number';\n      }\n\n      let name = this.refs.name.value;\n      let mobile_number = this.refs.mobile_number.value;\n      let serverSendData = {\n          name, mobile_number\n      }\n\n      // edit function calling\n      if (this.state.id && (this.refs.mobile_number.value != '' ||this.refs.name.value != '' || this.refs.name.value != null || this.refs.mobile_number.value != null) ){\n          this.editContactDetail(serverSendData);\n      }\n      // create function calling\n      else if (this.refs.mobile_number.value != '' ||this.refs.name.value != '' || this.refs.name.value != null || this.refs.mobile_number.value != null) {\n          this.createContact(serverSendData);\n      }\n      else {\n          console.log('Error');\n      }\n      this.state.nameErrors = '';\n      this.state.phoneErrors = '';\n      this.fetchContactDetails();\n\n      // reset form data here\n      this.refs.myForm.reset();\n      // reinitializing focus to the name input field\n      this.refs.name.focus();\n  }\n\n\n  createContact = async (serverSendData) => {\n      const response = await fetch(`${APIURL}/create`, {\n          method: \"POST\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(serverSendData)\n      });\n  }\n\n  fetchContactDetails = () => {\n    fetch(`${APIURL}/allcontacts`)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({\n          datas: data\n      });\n    })\n    .catch(console.log)\n  }\n\n  editContactDetail = async (serverSendData) => {\n      const response = await fetch(`${APIURL}/editcontact/?contactId=${this.state.id}`, {\n          method: \"PUT\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(serverSendData)\n      });\n  }\n\n  deleteContactDetail = async (id) => {\n      const response = await fetch(`${APIURL}/deletecontact/?contactId=${id}`, {\n          method: \"DELETE\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify()\n      });\n  }\n\n  fRemove = (i, id) => {\n    let datas  = this.state.datas;\n    datas.splice(i,1);\n    this.setState({\n      datas:datas\n    });\n    this.deleteContactDetail(id);\n    this.refs.myForm.reset();\n    this.refs.name.focus();\n  }\n\n  fEdit = (i, id) => {\n    let data = this.state.datas[i];\n    this.refs.name.value = data.name;\n    this.refs.mobile_number.value = data.mobile_number;\n\n    this.setState({\n      act: 1,\n      index: i,\n      id: id\n    })\n    this.refs.name.focus();\n  }\n\n  searchQuery = (e) => {\n    let item = this.refs.query.value;\n      console.log(item);\n    fetch(`${APIURL}/searchcontact/?filterItem=${item}`)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({\n          datas: data\n      });\n    })\n    .catch(console.log)\n  }\n\n  render() {\n    let datas = this.state.datas;\n    return (\n      <div className=\"App\">\n        <h2>{this.state.title}</h2>\n        <form ref=\"myForm\" className=\"myForm\">\n          <input\n              type=\"text\"\n              ref=\"name\"\n              placeholder=\"name\"\n              className=\"formField\"\n          />\n          {this.state.nameErrors}\n          <input type=\"tel\"\n                 ref=\"mobile_number\"\n                 placeholder=\"mobile number\"\n                 className=\"formField\"\n          />\n          {this.state.phoneErrors}\n          <button onClick={(e)=>this.fSubmit(e)} className=\"myButton\">Submit</button>\n        </form>\n\n        <h2>Contact List</h2>\n        <div>\n            <input type=\"text\" ref=\"query\" placeholder=\"search contact\" className=\"searchbox\" />\n            <button onClick={(e)=>this.searchQuery(e)} className=\"enterbutton\">Enter</button>\n        </div>\n        <pre className=\"contactList\">\n          {datas.map((data, i) =>\n            <li key={i} className=\"myList\">\n              {data.id}.{data.name}, {data.mobile_number}\n              <button onClick={()=>this.fRemove(i, data.id)} className=\"myListButton\">Remove</button>\n              <button onClick={()=>this.fEdit(i, data.id)} className=\"myListButton\">Edit</button>\n            </li>\n          )}\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}