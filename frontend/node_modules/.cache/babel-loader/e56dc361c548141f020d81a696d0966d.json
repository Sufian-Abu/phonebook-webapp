{"ast":null,"code":"var _jsxFileName = \"/Users/abusufian/Desktop/spring-rain-assignment/phonebook-webapp/frontend/src/components/properties.js\";\nimport React, { Component } from 'react';\n\nclass Properties extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDescription: false,\n      images: []\n    };\n\n    this.fetchPropertyDetails = e => {\n      const propertyId = e.target.getAttribute('data-item');\n      fetch(`http://localhost:4000/images/?propertyId=${propertyId}`).then(res => res.json()).then(data => {\n        const result = JSON.parse(data.image);\n        this.setState({\n          images: result\n        });\n      }).catch(console.log);\n      const showDescription = this.state.showDescription;\n      this.setState({\n        showDescription: !showDescription\n      });\n    };\n\n    this.fetchPropertyDetails = this.fetchPropertyDetails.bind(this);\n  }\n\n  render() {\n    const showDescription = this.state.showDescription;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, !showDescription && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Zip Code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"County\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Capacity\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.properties.map((property, index) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, property.id), React.createElement(\"td\", {\n      key: index,\n      \"data-item\": property.id,\n      onClick: this.fetchPropertyDetails,\n      style: {\n        textDecoration: 'underline',\n        color: 'blue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, property.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, property.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, property.city), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, property.state), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, property.zip_code), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, property.county), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, property.phone), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, property.type), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, property.capacity)))))), showDescription && React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.images.map(image => React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Properties;","map":{"version":3,"sources":["/Users/abusufian/Desktop/spring-rain-assignment/phonebook-webapp/frontend/src/components/properties.js"],"names":["React","Component","Properties","constructor","props","state","showDescription","images","fetchPropertyDetails","e","propertyId","target","getAttribute","fetch","then","res","json","data","result","JSON","parse","image","setState","catch","console","log","bind","render","properties","map","property","index","id","textDecoration","color","name","address","city","zip_code","county","phone","type","capacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nclass Properties extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchPropertyDetails = this.fetchPropertyDetails.bind(this);\n  }\n  state = {\n    showDescription: false,\n    images: []\n  };\n\n  fetchPropertyDetails = (e) => {\n    const propertyId = e.target.getAttribute('data-item');\n    fetch(`http://localhost:4000/images/?propertyId=${propertyId}`)\n    .then(res => res.json())\n    .then((data) => {\n      const result = JSON.parse(data.image);\n      this.setState({ images: result });\n    })\n    .catch(console.log)\n    const { showDescription } = this.state;\n    this.setState({\n        showDescription: !showDescription,\n    });\n  }\n  render() {\n    const { showDescription } = this.state;\n    return (\n         <div>\n            {!showDescription && (\n                 <div>\n                     <table>\n                      <thead>\n                        <tr>\n                          <th>Id</th>\n                          <th>Name</th>\n                          <th>Address</th>\n                          <th>City</th>\n                          <th>State</th>\n                          <th>Zip Code</th>\n                          <th>County</th>\n                          <th>Phone</th>\n                          <th>Type</th>\n                          <th>Capacity</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                          {this.props.properties.map((property, index) => (\n                              <tr>\n                                  <td>{property.id}</td>\n                                  <td key={index} data-item={property.id} onClick={this.fetchPropertyDetails}\n                                      style={{ textDecoration: 'underline', color: 'blue' }}\n                                  >\n                                      {property.name}\n                                  </td>\n                                  <td>{property.address}</td>\n                                  <td>{property.city}</td>\n                                  <td>{property.state}</td>\n                                  <td>{property.zip_code}</td>\n                                  <td>{property.county}</td>\n                                  <td>{property.phone}</td>\n                                  <td>{property.type}</td>\n                                  <td>{property.capacity}</td>\n\n                              </tr>\n                            ))}\n                       </tbody>\n                     </table>\n                 </div>\n            )}\n            {showDescription && (\n                <div className={\"row\"}>\n                  {this.state.images.map(image =>\n                      <div className={\"column\"}>\n                        <img src={image} />\n                      </div>)}\n                </div>\n            )}\n         </div>\n    );\n  }\n}\nexport default Properties;\n"]},"metadata":{},"sourceType":"module"}