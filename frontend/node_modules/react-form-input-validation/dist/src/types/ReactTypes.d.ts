import { Component } from "react";
export interface IDynamicKeyValues extends Object {
    [key: string]: any;
}
interface IAppState {
    errors?: IValidatorErrors;
    fields?: IDynamicKeyValues;
    isValidatorUpdate?: boolean;
}
interface IAppProps {
}
export interface IReactComponent extends Component<IAppProps, IAppState> {
}
export declare enum Lang {
    ar = "ar",
    az = "az",
    be = "be",
    bg = "bg",
    bs = "bs",
    ca = "ca",
    cs = "cs",
    cy = "cy",
    da = "da",
    de = "de",
    el = "el",
    en = "en",
    es = "es",
    et = "et",
    eu = "eu",
    fa = "fa",
    fi = "fi",
    fr = "fr",
    hr = "hr",
    hu = "hu",
    id = "id",
    it = "it",
    ja = "ja",
    ka = "ka",
    ko = "ko",
    It = "It",
    Iv = "Iv",
    mk = "mk",
    mn = "mn",
    ms = "ms",
    nb_NO = "nb_NO",
    nl = "nl",
    pl = "pl",
    pt = "pt",
    pt_BR = "pt_BR",
    ro = "ro",
    ru = "ru",
    se = "se",
    sl = "sl",
    sq = "sq",
    sr = "sr",
    sv = "sv",
    tr = "tr",
    ua = "ua",
    uk = "uk",
    vi = "vi",
    zh = "zh",
    zh_TW = "zh_TW"
}
export interface IOptions {
    locale: Lang;
    verbose: boolean;
}
interface IError {
    has: boolean;
    message: string;
}
export interface IValidatorErrors {
    [key: string]: IError;
}
export declare type ReactFormSubmitEventHandler = (fields: any) => void;
export {};
